{"version":3,"sources":["services/tour.service.js","components/Tour.jsx"],"names":["tourApi","getAll","params","axiosClient","get","getTour","tourId","url","Tour","props","console","log","tours","useSelector","state","tour","useParams","slug","useState","guides","startDates","images","locations","reviews","description","setTour","viewport","setViewport","selectpoint","setSelectedPoint","useEffect","a","response","data","myTour","length","latitude","coordinates","longitude","zoom","listQuick","icon","label","text","moment","format","difficulty","maxGroupSize","ratingsAverage","map","i","className","xlinkHref","guide","src","photo","alt","name","role","p","split","para","Img","img","listener","e","key","window","addEventListener","removeEventListener","imageCover","duration","height","width","mapStyle","onViewportChange","mapboxApiAccessToken","point","onClick","preventDefault","_id","onClose","review","user","star","rating","image"],"mappings":"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","file":"static/js/4.592e1dcd.chunk.js","sourcesContent":["import axiosClient from \"../api/axiosClient\";\r\n\r\nconst tourApi = {\r\n  getAll: (params) => {\r\n    const url = \"/tours\";\r\n    return axiosClient.get(url, { params });\r\n  },\r\n\r\n  getTour: (tourId) => {\r\n    const url = `/tours/${tourId}`;\r\n    return axiosClient.get(url);\r\n  },\r\n};\r\nexport default tourApi;\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaStar } from \"react-icons/fa\";\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport tourApi from \"../services/tour.service\";\r\n\r\nconst REACT_APP_MAPBOX_TOKEN =\r\n  \"pk.eyJ1IjoiY2hpbmhudjQ2IiwiYSI6ImNrdDhibW1kazEwbnMydmxqZTN0NTNwYjgifQ.LegkQHZ53fkU8hcpa-Py2w\";\r\n\r\nfunction Tour(props) {\r\n  console.log(\"den day chÆ°a\");\r\n  const { tours } = useSelector((state) => state.tour);\r\n  const { slug, tourId } = useParams();\r\n  const [tour, setTour] = useState({\r\n    guides: [],\r\n    startDates: [],\r\n    images: [],\r\n    locations: [],\r\n    reviews: [],\r\n    description: \"\",\r\n  });\r\n\r\n  const [rating, setRating] = useState(5);\r\n  const [viewport, setViewport] = useState({\r\n    // latitude: 21.03460455806355,\r\n    // longitude: 105.85061296268242,\r\n    // zoom: 9,\r\n  });\r\n\r\n  const [selectpoint, setSelectedPoint] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Todo: Call api0\r\n    const getTour = async () => {\r\n      try {\r\n        const response = await tourApi.getTour(tourId);\r\n        console.log(response);\r\n        setTour(response.data.data);\r\n        let myTour = response.data.data;\r\n        if (myTour.locations.length > 0) {\r\n          setViewport({\r\n            latitude: myTour.locations[0].coordinates[1],\r\n            longitude: myTour.locations[0].coordinates[0],\r\n            zoom: 9,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Fail to featch tour\", error);\r\n      }\r\n    };\r\n    getTour();\r\n  }, [tours, tourId]);\r\n\r\n  const Quick = [\r\n    {\r\n      icon: \"calendar\",\r\n      label: \"NEXT DAY\",\r\n      text: `${moment(tour.startDates[0]).format(\"DD/MM/YYYY\")}`,\r\n    },\r\n    {\r\n      icon: \"trending-up\",\r\n      label: \"DIFFICULTY\",\r\n      text: `${tour.difficulty}`,\r\n    },\r\n    {\r\n      icon: \"user\",\r\n      label: \"PARTICIPAINTS\",\r\n      text: `${tour.maxGroupSize}`,\r\n    },\r\n    {\r\n      icon: \"star\",\r\n      label: \"RATING\",\r\n      text: `${tour.ratingsAverage}`,\r\n    },\r\n  ];\r\n\r\n  const listQuick = Quick.map(({ icon, label, text }, i) => (\r\n    <>\r\n      <li key={i} className=\"overview-box__detail\">\r\n        <svg className=\"overview-box__icon\">\r\n          <use xlinkHref={`/icons.svg#icon-${icon}`}></use>\r\n        </svg>\r\n        <span className=\"overview-box__label\">{label}</span>\r\n        <span className=\"overview-box__text\">{text}</span>\r\n      </li>\r\n    </>\r\n  ));\r\n\r\n  const guides = tour.guides.map((guide, i) => (\r\n    <div key={i} className=\"overview-box__detail\">\r\n      <img\r\n        className=\"overview-box__img\"\r\n        src={`/users/${guide.photo}`}\r\n        alt={guide.name}\r\n      ></img>\r\n      {guide.role === \"lead-guide\" ? (\r\n        <span className=\"overview-box__label\">Lead guide</span>\r\n      ) : (\r\n        <span className=\"overview-box__label\">Tour guide</span>\r\n      )}\r\n      <span className=\"overview-box__text\">{guide.name}</span>\r\n    </div>\r\n  ));\r\n\r\n  const parapraphs = tour.description.split(\"\\n\");\r\n  const p = parapraphs.map((para, i) => (\r\n    <p key={i} className=\"description__text\">\r\n      {para}\r\n    </p>\r\n  ));\r\n\r\n  const Img = tour.images.map((img, i) => (\r\n    <div className=\"picture-box\">\r\n      <img\r\n        className=\"picture-box__img\"\r\n        src={`/tours/${img}`}\r\n        alt={`The Park Camper Tour ${i + 1}`}\r\n      />\r\n    </div>\r\n  ));\r\n\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        setSelectedPoint(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", listener);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"section-header\">\r\n        <>\r\n          <div className=\"header__hero-overlay\">&nbsp;</div>\r\n          <img\r\n            className=\"header__hero-img\"\r\n            src={`/tours/${tour.imageCover}`}\r\n            alt={tour.name}\r\n          />\r\n        </>\r\n        <div className=\"heading-box\">\r\n          <h1 className=\"heading-primary\">\r\n            <span>{tour.name}</span>\r\n          </h1>\r\n          <div className=\"heading-box__group\">\r\n            <div className=\"heading-box__detail\">\r\n              <svg className=\"heading-box__icon\">\r\n                <use xlinkHref=\"/icons.svg#icon-clock\"></use>\r\n              </svg>\r\n              <span className=\"heading-box__text\">{tour.duration} DAYS</span>\r\n            </div>\r\n            <div className=\"heading-box__detail\">\r\n              <svg className=\"heading-box__icon\">\r\n                <use xlinkHref=\"/icons.svg#icon-map-pin\"></use>\r\n              </svg>\r\n              <span className=\"heading-box__text\">{tour.name} DAYS</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"section-description\">\r\n        <div className=\"overview-box\">\r\n          <div>\r\n            <div className=\"overview-box__group\">\r\n              <h2 className=\"heading-secondary ma-bt-lg\">Quick facts</h2>\r\n              <div> {listQuick}</div>\r\n            </div>\r\n            <div className=\"overview-box__group\">\r\n              <h2 className=\"heading-secondary ma-bt-lg\">Your tour guide</h2>\r\n              <div>{guides}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"description-box\">\r\n          <h2 className=\"heading-secondary ma-bt-lg\">\r\n            {`About ${tour.name} tour`}{\" \"}\r\n          </h2>\r\n          <span className=\"description__text\">{p}</span>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section-pictures\">\r\n        <div>{Img}</div>\r\n      </section>\r\n\r\n      <section>\r\n        <div>\r\n          <ReactMapGL\r\n            {...viewport}\r\n            height=\"600px\"\r\n            width=\"auto\"\r\n            mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n            onViewportChange={setViewport}\r\n            mapboxApiAccessToken={REACT_APP_MAPBOX_TOKEN}\r\n          >\r\n            {tour.locations.map((point) => (\r\n              <Marker\r\n                key={tour.locations._id}\r\n                latitude={point.coordinates[1]}\r\n                longitude={point.coordinates[0]}\r\n              >\r\n                <button\r\n                  className=\"marker-btn\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedPoint(point);\r\n                  }}\r\n                >\r\n                  <img src=\"/Map_pin_icon_green.svg.png\" alt=\"GHTK Icon\" />\r\n                </button>\r\n              </Marker>\r\n            ))}\r\n\r\n            {selectpoint ? (\r\n              <Popup\r\n                latitude={selectpoint.coordinates[1]}\r\n                longitude={selectpoint.coordinates[0]}\r\n                onClose={() => {\r\n                  setSelectedPoint(null);\r\n                }}\r\n              >\r\n                <div>\r\n                  <h4 className=\"text-secondary\">{selectpoint.description}</h4>\r\n                </div>\r\n              </Popup>\r\n            ) : null}\r\n          </ReactMapGL>\r\n        </div>\r\n      </section>\r\n\r\n      <section>\r\n        <div className=\"reviews\">\r\n          {tour.reviews.map((review) => (\r\n            <>\r\n              <div className=\"reviews__card\">\r\n                <div className=\"reviews__avatar\">\r\n                  <img\r\n                    className=\"reviews__avatar-img\"\r\n                    src={`/users/${review.user.photo}`}\r\n                    alt={`${review.user.name}`}\r\n                  />\r\n                  <h4 className=\"reviews__user\">{review.user.name}</h4>\r\n                </div>\r\n                <h4 className=\"review__text\">{review.review}</h4>\r\n                <div className=\"reviews__rating\">\r\n                  {[1, 2, 3, 4, 5].map((star, i) => {\r\n                    return (\r\n                      <FaStar\r\n                        className={`reviews__star--${\r\n                          review.rating >= star ? \"active\" : \"inactive\"\r\n                        }`}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section-cta\">\r\n        <div className=\"cta\">\r\n          {tour.images.map((image, i) => (\r\n            // eslint-disable-next-line jsx-a11y/img-redundant-alt\r\n            <img\r\n              className={`cta__img cta__img--${i}`}\r\n              src={`/tours/${image}`}\r\n              alt=\"tour picture\"\r\n            />\r\n          ))}\r\n          <div className=\"cta__content\">\r\n            <h2 className=\"heading-secondary\"> What are you waiting for ?</h2>\r\n            <p className=\"cta__text\">{`${tour.duration} day . 1 adventure. Make it yours today !`}</p>\r\n            <button className=\"btn btn--green span-all-rows\">\r\n              Book tour now!\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tour;\r\n"],"sourceRoot":""}